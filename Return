[1mdiff --git a/README.md.txt b/README.md.txt[m
[1mindex 7353af2..a49ceac 100644[m
[1m--- a/README.md.txt[m
[1m+++ b/README.md.txt[m
[36m@@ -2,6 +2,4 @@[m
 Hello World repository for Git tutorial[m
 This is an example repository for the Git tutoial on https://www.bmmaagtsc.edu[m
 [m
[31m-This repository is built step by step in the tutorial. [m
[31m-[m
[31m-now it icludes steps for Github[m
[32m+[m[32mThis repository is built step by step in the tutorial.[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/Return b/Return[m
[1mnew file mode 100644[m
[1mindex 0000000..18b0f91[m
[1m--- /dev/null[m
[1m+++ b/Return[m
[36m@@ -0,0 +1,126 @@[m
[32m+[m[32mSee 'git help <command>' to read about a specific subcommand[m
[32m+[m
[32m+[m[32mMain Porcelain Commands[m
[32m+[m[32m   add                     Add file contents to the index[m
[32m+[m[32m   am                      Apply a series of patches from a mailbox[m
[32m+[m[32m   archive                 Create an archive of files from a named tree[m
[32m+[m[32m   bisect                  Use binary search to find the commit that introduced a bug[m
[32m+[m[32m   branch                  List, create, or delete branches[m
[32m+[m[32m   bundle                  Move objects and refs by archive[m
[32m+[m[32m   checkout                Switch branches or restore working tree files[m
[32m+[m[32m   cherry-pick             Apply the changes introduced by some existing commits[m
[32m+[m[32m   citool                  Graphical alternative to git-commit[m
[32m+[m[32m   clean                   Remove untracked files from the working tree[m
[32m+[m[32m   clone                   Clone a repository into a new directory[m
[32m+[m[32m   commit                  Record changes to the repository[m
[32m+[m[32m   describe                Give an object a human readable name based on an available ref[m
[32m+[m[32m   diff                    Show changes between commits, commit and working tree, etc[m
[32m+[m[32m   fetch                   Download objects and refs from another repository[m
[32m+[m[32m   format-patch            Prepare patches for e-mail submission[m
[32m+[m[32m   gc                      Cleanup unnecessary files and optimize the local repository[m
[32m+[m[32m   gitk                    The Git repository browser[m
[32m+[m[32m   grep                    Print lines matching a pattern[m
[32m+[m[32m   gui                     A portable graphical interface to Git[m
[32m+[m[32m   init                    Create an empty Git repository or reinitialize an existing one[m
[32m+[m[32m   log                     Show commit logs[m
[32m+[m[32m   maintenance             Run tasks to optimize Git repository data[m
[32m+[m[32m   merge                   Join two or more development histories together[m
[32m+[m[32m   mv                      Move or rename a file, a directory, or a symlink[m
[32m+[m[32m   notes                   Add or inspect object notes[m
[32m+[m[32m   pull                    Fetch from and integrate with another repository or a local branch[m
[32m+[m[32m   push                    Update remote refs along with associated objects[m
[32m+[m[32m   range-diff              Compare two commit ranges (e.g. two versions of a branch)[m
[32m+[m[32m   rebase                  Reapply commits on top of another base tip[m
[32m+[m[32m   reset                   Reset current HEAD to the specified state[m
[32m+[m[32m   restore                 Restore working tree files[m
[32m+[m[32m   revert                  Revert some existing commits[m
[32m+[m[32m   rm                      Remove files from the working tree and from the index[m
[32m+[m[32m   scalar                  A tool for managing large Git repositories[m
[32m+[m[32m   shortlog                Summarize 'git log' output[m
[32m+[m[32m   show                    Show various types of objects[m
[32m+[m[32m   sparse-checkout         Reduce your working tree to a subset of tracked files[m
[32m+[m[32m   stash                   Stash the changes in a dirty working directory away[m
[32m+[m[32m   status                  Show the working tree status[m
[32m+[m[32m   submodule               Initialize, update or inspect submodules[m
[32m+[m[32m   switch                  Switch branches[m
[32m+[m[32m   tag                     Create, list, delete or verify a tag object signed with GPG[m
[32m+[m[32m   worktree                Manage multiple working trees[m
[32m+[m
[32m+[m[32mAncillary Commands / Manipulators[m
[32m+[m[32m   config                  Get and set repository or global options[m
[32m+[m[32m   fast-export             Git data exporter[m
[32m+[m[32m   fast-import             Backend for fast Git data importers[m
[32m+[m[32m   filter-branch           Rewrite branches[m
[32m+[m[32m   mergetool               Run merge conflict resolution tools to resolve merge conflicts[m
[32m+[m[32m   pack-refs               Pack heads and tags for efficient repository access[m
[32m+[m[32m   prune                   Prune all unreachable objects from the object database[m
[32m+[m[32m   reflog                  Manage reflog information[m
[32m+[m[32m   remote                  Manage set of tracked repositories[m
[32m+[m[32m   repack                  Pack unpacked objects in a repository[m
[32m+[m[32m   replace                 Create, list, delete refs to replace objects[m
[32m+[m
[32m+[m[32mAncillary Commands / Interrogators[m
[32m+[m[32m   annotate                Annotate file lines with commit information[m
[32m+[m[32m   blame                   Show what revision and author last modified each line of a file[m
[32m+[m[32m   bugreport               Collect information for user to file a bug report[m
[32m+[m[32m   count-objects           Count unpacked number of objects and their disk consumption[m
[32m+[m[32m   diagnose                Generate a zip archive of diagnostic information[m
[32m+[m[32m   difftool                Show changes using common diff tools[m
[32m+[m[32m   fsck                    Verifies the connectivity and validity of the objects in the database[m
[32m+[m[32m   gitweb                  Git web interface (web frontend to Git repositories)[m
[32m+[m[32m   help                    Display help information about Git[m
[32m+[m[32m   instaweb                Instantly browse your working repository in gitweb[m
[32m+[m[32m   merge-tree              Perform merge without touching index or working tree[m
[32m+[m[32m   rerere                  Reuse recorded resolution of conflicted merges[m
[32m+[m[32m   show-branch             Show branches and their commits[m
[32m+[m[32m   verify-commit           Check the GPG signature of commits[m
[32m+[m[32m   verify-tag              Check the GPG signature of tags[m
[32m+[m[32m   version                 Display version information about Git[m
[32m+[m[32m   whatchanged             Show logs with difference each commit introduces[m
[32m+[m
[32m+[m[32mInteracting with Others[m
[32m+[m[32m   archimport              Import a GNU Arch repository into Git[m
[32m+[m[32m   cvsexportcommit         Export a single commit to a CVS checkout[m
[32m+[m[32m   cvsimport               Salvage your data out of another SCM people love to hate[m
[32m+[m[32m   cvsserver               A CVS server emulator for Git[m
[32m+[m[32m   imap-send               Send a collection of patches from stdin to an IMAP folder[m
[32m+[m[32m   p4                      Import from and submit to Perforce repositories[m
[32m+[m[32m   quiltimport             Applies a quilt patchset onto the current branch[m
[32m+[m[32m   request-pull            Generates a summary of pending changes[m
[32m+[m[32m   send-email              Send a collection of patches as emails[m
[32m+[m[32m   svn                     Bidirectional operation between a Subversion repository and Git[m
[32m+[m
[32m+[m[32mLow-level Commands / Manipulators[m
[32m+[m[32m   apply                   Apply a patch to files and/or to the index[m
[32m+[m[32m   checkout-index          Copy files from the index to the working tree[m
[32m+[m[32m   commit-graph            Write and verify Git commit-graph files[m
[32m+[m[32m   commit-tree             Create a new commit object[m
[32m+[m[32m   hash-object             Compute object ID and optionally creates a blob from a file[m
[32m+[m[32m   index-pack              Build pack index file for an existing packed archive[m
[32m+[m[32m   merge-file              Run a three-way file merge[m
[32m+[m[32m   merge-index             Run a merge for files needing merging[m
[32m+[m[32m   mktag                   Creates a tag object with extra validation[m
[32m+[m[32m   mktree                  Build a tree-object from ls-tree formatted text[m
[32m+[m[32m   multi-pack-index        Write and verify multi-pack-indexes[m
[32m+[m[32m   pack-objects            Create a packed archive of objects[m
[32m+[m[32m   prune-packed            Remove extra objects that are already in pack files[m
[32m+[m[32m   read-tree               Reads tree information into the index[m
[32m+[m[32m   symbolic-ref            Read, modify and delete symbolic refs[m
[32m+[m[32m   unpack-objects          Unpack objects from a packed archive[m
[32m+[m[32m   update-index            Register file contents in the working tree to the index[m
[32m+[m[32m   update-ref              Update the object name stored in a ref safely[m
[32m+[m[32m   write-tree              Create a tree object from the current index[m
[32m+[m
[32m+[m[32mLow-level Commands / Interrogators[m
[32m+[m[32m   cat-file                Provide content or type and size information for repository objects[m
[32m+[m[32m   cherry                  Find commits yet to be applied to upstream[m
[32m+[m[32m   diff-files              Compares files in the working tree and the index[m
[32m+[m[32m   diff-index              Compare a tree to the working tree or index[m
[32m+[m[32m   diff-tree               Compares the content and mode of blobs found via two tree objects[m
[32m+[m[32m   for-each-ref            Output information on each ref[m
[32m+[m[32m   for-each-repo           Run a Git command on a list of repositories[m
[32m+[m[32m   get-tar-commit-id       Extract commit ID from an archive created using git-archive[m
[32m+[m[32m   ls-files                Show information about files in the index and the working tree[m
[32m+[m[32m   ls-remote               List references in a remote repository[m
[32m+[m[32m   ls-tree                 List the contents of a tree object[m
[32m+[m[32m   merge-base[m[41m     [m
\ No newline at end of file[m
